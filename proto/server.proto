syntax = "proto3";

package kvServer;

option cc_generic_services = true;  //开启stub服务
/*
当在 .proto 文件中设置 cc_generic_services = true 时，protobuf 编译器 (protoc) 会为定义的 service 生成通用（泛型）RPC 服务代码。
这会生成以下额外的 C++ 代码：每个 service 会生成一个 Service 类和对应的 Stub 类。提供基于反射的通用 RPC 接口（不依赖具体传输协议）。

例如：
service MyService {
  rpc MyMethod (MyRequest) returns (MyResponse);
}
生成的代码会包含：
MyService 类：抽象接口，需要用户实现具体的服务逻辑。
MyService_Stub 类：客户端存根，用于调用远程服务。
*/

// 日志实体
message GetArgs{
    bytes Key = 1 ;
    bytes ClientId = 2 ;
    int32 RequestId = 3;
}

message GetReply  {
    //	下面几个参数和论文中相同
    bytes Err = 1;
    bytes Value = 2;

}

message PutAppendArgs  {
    bytes Key = 1;
    bytes  Value = 2 ;
    bytes  Op = 3;
    bytes  ClientId = 4;
    int32  RequestId = 5;
}

message PutAppendReply  {
    bytes Err = 1;
}

service kvServerRpc {
    rpc PutAppend(PutAppendArgs) returns(PutAppendReply);
    rpc Get (GetArgs) returns (GetReply);
}